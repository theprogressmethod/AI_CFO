{
  "name": "Excel Debugger",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "process-financials",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [100, 300],
      "webhookId": "process-financials"
    },
    {
      "parameters": {
        "jsCode": "// Fix binary\nconst items = $input.all();\nitems.forEach(item => {\n  if (item.binary) {\n    const binaryKeys = Object.keys(item.binary);\n    if (binaryKeys.length > 0 && !item.binary.data) {\n      item.binary.data = item.binary[binaryKeys[0]];\n    }\n  }\n});\nreturn items;"
      },
      "id": "fix",
      "name": "Fix Binary",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [250, 300]
    },
    {
      "parameters": {
        "operation": "spreadsheetFile",
        "binaryPropertyName": "data",
        "options": {
          "includeEmptyCells": false,
          "headerRow": false,
          "readAsString": false,
          "rawData": false
        }
      },
      "id": "read",
      "name": "Read Excel Raw",
      "type": "n8n-nodes-base.spreadsheetFile",
      "typeVersion": 2,
      "position": [400, 300]
    },
    {
      "parameters": {
        "jsCode": "// Show exact structure\nconst items = $input.all();\nlet debugInfo = [];\n\nitems.forEach((item, idx) => {\n  const fileName = item.binary?.data?.fileName || `File ${idx}`;\n  const data = item.json;\n  \n  console.log(`\\n=== ${fileName} ===`);\n  console.log('Type:', Array.isArray(data) ? 'Array' : typeof data);\n  \n  if (Array.isArray(data)) {\n    console.log('Array length:', data.length);\n    console.log('First 3 items:');\n    data.slice(0, 3).forEach((row, i) => {\n      console.log(`Row ${i}:`, JSON.stringify(row));\n    });\n  } else if (typeof data === 'object') {\n    const keys = Object.keys(data);\n    console.log('Object keys count:', keys.length);\n    console.log('First 5 keys:', keys.slice(0, 5));\n    keys.slice(0, 3).forEach(key => {\n      console.log(`${key}:`, JSON.stringify(data[key]));\n    });\n  }\n  \n  // Create debug output\n  debugInfo.push({\n    \"Date Concat\": \"DEBUG\",\n    \"Year\": \"2025\",\n    \"Month\": \"1\",\n    \"Financial Statements\": fileName,\n    \"Parent Account\": \"Structure\",\n    \"Account\": Array.isArray(data) ? `Array[${data.length}]` : `Object[${Object.keys(data).length} keys]`,\n    \"Attribute\": \"1/1/2025\",\n    \"Value\": \"Check n8n logs\"\n  });\n});\n\nreturn [{json: {data: JSON.stringify(debugInfo)}}];"
      },
      "id": "debug",
      "name": "Debug Structure",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [550, 300]
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.data }}",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Access-Control-Allow-Origin",
                "value": "*"
              },
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          }
        }
      },
      "id": "respond",
      "name": "Respond",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [700, 300]
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Fix Binary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix Binary": {
      "main": [
        [
          {
            "node": "Read Excel Raw",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Excel Raw": {
      "main": [
        [
          {
            "node": "Debug Structure",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Debug Structure": {
      "main": [
        [
          {
            "node": "Respond",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "debug-v1",
  "id": "excel-debugger",
  "tags": []
}